{"ast":null,"code":"function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\n\nfunction _classCheckPrivateStaticFieldDescriptor(descriptor, action) { if (descriptor === undefined) { throw new TypeError(\"attempted to \" + action + \" private static field before its declaration\"); } }\n\nfunction _classCheckPrivateStaticAccess(receiver, classConstructor) { if (receiver !== classConstructor) { throw new TypeError(\"Private static access of wrong provenance\"); } }\n\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n\nimport AWS from \"aws-sdk\";\n\nclass AWS_Ops {\n  constructor() {\n    AWS.config.update({\n      accessKeyId: _classStaticPrivateFieldSpecGet(AWS_Ops, AWS_Ops, _CONFIG).AWS_KEY,\n      secretAccessKey: _classStaticPrivateFieldSpecGet(AWS_Ops, AWS_Ops, _CONFIG).AWS_SECRET\n    });\n  }\n\n  getUrl(fileName) {\n    return `https://${_classStaticPrivateFieldSpecGet(AWS_Ops, AWS_Ops, _CONFIG).bucketName}.s3.${_classStaticPrivateFieldSpecGet(AWS_Ops, AWS_Ops, _CONFIG).region}.amazonaws.com/${fileName}`;\n  }\n\n  uploadToS3(file) {\n    const params = {\n      ACL: \"public-read\",\n      Key: file.name,\n      ContentType: file.type,\n      Body: file,\n      Bucket: _classStaticPrivateFieldSpecGet(AWS_Ops, AWS_Ops, _CONFIG).bucketName\n    };\n    const s3 = new AWS.S3();\n    return {\n      uploadHandler: s3.upload(params),\n      url: this.getUrl(file.name)\n    };\n  }\n\n}\n\nvar _CONFIG = {\n  writable: true,\n  value: {\n    AWS_KEY: process.env.NEXT_PUBLIC_AWS_ACCESS_KEY,\n    AWS_SECRET: process.env.NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY,\n    bucketName: process.env.NEXT_PUBLIC_BUCKET_NAME,\n    region: process.env.NEXT_PUBLIC_REGION\n  }\n};\nexport default AWS_Ops;","map":{"version":3,"names":["AWS","AWS_Ops","constructor","config","update","accessKeyId","AWS_KEY","secretAccessKey","AWS_SECRET","getUrl","fileName","bucketName","region","uploadToS3","file","params","ACL","Key","name","ContentType","type","Body","Bucket","s3","S3","uploadHandler","upload","url","process","env","NEXT_PUBLIC_AWS_ACCESS_KEY","NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY","NEXT_PUBLIC_BUCKET_NAME","NEXT_PUBLIC_REGION"],"sources":["C:/Users/teldeeb/kitchen/Anomly/utils/AWS_S3.js"],"sourcesContent":["import AWS from \"aws-sdk\";\r\n\r\nclass AWS_Ops {\r\n    static #CONFIG = {\r\n        AWS_KEY: process.env.NEXT_PUBLIC_AWS_ACCESS_KEY,\r\n        AWS_SECRET: process.env.NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY,\r\n        bucketName: process.env.NEXT_PUBLIC_BUCKET_NAME,\r\n        region: process.env.NEXT_PUBLIC_REGION,\r\n    };\r\n\r\n    constructor() {\r\n        AWS.config.update({\r\n            accessKeyId: AWS_Ops.#CONFIG.AWS_KEY,\r\n            secretAccessKey: AWS_Ops.#CONFIG.AWS_SECRET,\r\n        });\r\n    }\r\n\r\n    getUrl(fileName) {\r\n        return `https://${AWS_Ops.#CONFIG.bucketName}.s3.${\r\n            AWS_Ops.#CONFIG.region\r\n        }.amazonaws.com/${fileName}`;\r\n    }\r\n\r\n    uploadToS3(file) {\r\n        const params = {\r\n            ACL: \"public-read\",\r\n            Key: file.name,\r\n            ContentType: file.type,\r\n            Body: file,\r\n            Bucket: AWS_Ops.#CONFIG.bucketName,\r\n        };\r\n\r\n        const s3 = new AWS.S3();\r\n        return {\r\n            uploadHandler: s3.upload(params),\r\n            url: this.getUrl(file.name),\r\n        };\r\n    }\r\n}\r\n\r\nexport default AWS_Ops;\r\n"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,MAAgB,SAAhB;;AAEA,MAAMC,OAAN,CAAc;EAQVC,WAAW,GAAG;IACVF,GAAG,CAACG,MAAJ,CAAWC,MAAX,CAAkB;MACdC,WAAW,EAAE,gCAAAJ,OAAO,EAV1BA,OAU0B,UAAP,CAAgBK,OADf;MAEdC,eAAe,EAAE,gCAAAN,OAAO,EAX9BA,OAW8B,UAAP,CAAgBO;IAFnB,CAAlB;EAIH;;EAEDC,MAAM,CAACC,QAAD,EAAW;IACb,OAAQ,WAAU,gCAAAT,OAAO,EAhB3BA,OAgB2B,UAAP,CAAgBU,UAAW,OACzC,gCAAAV,OAAO,EAjBbA,OAiBa,UAAP,CAAgBW,MACnB,kBAAiBF,QAAS,EAF3B;EAGH;;EAEDG,UAAU,CAACC,IAAD,EAAO;IACb,MAAMC,MAAM,GAAG;MACXC,GAAG,EAAE,aADM;MAEXC,GAAG,EAAEH,IAAI,CAACI,IAFC;MAGXC,WAAW,EAAEL,IAAI,CAACM,IAHP;MAIXC,IAAI,EAAEP,IAJK;MAKXQ,MAAM,EAAE,gCAAArB,OAAO,EA3BrBA,OA2BqB,UAAP,CAAgBU;IALb,CAAf;IAQA,MAAMY,EAAE,GAAG,IAAIvB,GAAG,CAACwB,EAAR,EAAX;IACA,OAAO;MACHC,aAAa,EAAEF,EAAE,CAACG,MAAH,CAAUX,MAAV,CADZ;MAEHY,GAAG,EAAE,KAAKlB,MAAL,CAAYK,IAAI,CAACI,IAAjB;IAFF,CAAP;EAIH;;AAnCS;;;;SACO;IACbZ,OAAO,EAAEsB,OAAO,CAACC,GAAR,CAAYC,0BADR;IAEbtB,UAAU,EAAEoB,OAAO,CAACC,GAAR,CAAYE,iCAFX;IAGbpB,UAAU,EAAEiB,OAAO,CAACC,GAAR,CAAYG,uBAHX;IAIbpB,MAAM,EAAEgB,OAAO,CAACC,GAAR,CAAYI;EAJP;;AAqCrB,eAAehC,OAAf"},"metadata":{},"sourceType":"module"}