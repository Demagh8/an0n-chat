{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from \"react\";\nimport { UserContext } from \"./ChatHome\";\nimport { Message } from \"../../utils/Message\";\nimport \"../../styles/chatmessage.scss\";\nimport MessageHeader from \"./MessageHeader\";\n\nvar ChatMessage = function ChatMessage(_ref) {\n  _s();\n\n  var message = _ref.message;\n  // current user\n  var userInfo = useContext(UserContext);\n  var user = message.user,\n      type = message.type,\n      time = message.time;\n  var selfClass = userInfo.username === user ? \"message-chat-self\" : \"\";\n  /**\r\n   * Render file messages using their URL\r\n   */\n\n  var renderFileMessage = function renderFileMessage() {\n    var fileUrl = message.fileUrl,\n        fileName = message.fileName;\n\n    switch (type) {\n      case Message.IMAGE:\n        return __jsx(\"div\", {\n          className: \"message message-chat message-media \".concat(selfClass)\n        }, __jsx(MessageHeader, {\n          isCurrentUser: selfClass === \"\" ? false : true,\n          user: user,\n          time: time\n        }), __jsx(\"img\", {\n          className: \"chat-image\",\n          src: fileUrl,\n          alt: user + \" \" + time\n        }));\n\n      case Message.VIDEO:\n        return __jsx(\"div\", {\n          className: \"message message-chat message-media \".concat(selfClass)\n        }, __jsx(MessageHeader, {\n          isCurrentUser: selfClass === \"\" ? false : true,\n          user: user,\n          time: time\n        }), __jsx(\"video\", {\n          className: \"chat-video\",\n          controls: true\n        }, __jsx(\"source\", {\n          src: fileUrl,\n          type: \"video/mp4\"\n        }), \"Your browser does not support the video tag.\"));\n\n      case Message.FILE:\n        return __jsx(\"div\", {\n          className: \"message message-chat message-media \".concat(selfClass)\n        }, __jsx(MessageHeader, {\n          isCurrentUser: selfClass === \"\" ? false : true,\n          user: user,\n          time: time\n        }), __jsx(\"a\", {\n          className: \"chat-file\",\n          href: fileUrl,\n          target: \"_blank\"\n        }, __jsx(\"i\", {\n          className: \"fa fa-file fa-2x mr-2\"\n        }), __jsx(\"span\", null, fileName)));\n    }\n  };\n  /**\r\n   * Render text messages\r\n   */\n\n\n  var renderChatMessage = function renderChatMessage() {\n    var chatMessage = message.chatMessage; // render bot messages\n\n    if (type === Message.BOT) {\n      return __jsx(\"div\", {\n        className: \"message message-bot text-center\"\n      }, __jsx(\"small\", null, chatMessage));\n    }\n\n    CryptoJS.AES.decrypt(chatMessage, user.pkey).toString(CryptoJS.enc.Utf8), _readOnlyError(\"chatMessage\");\n    return __jsx(\"div\", {\n      className: \"message message-chat \".concat(selfClass)\n    }, __jsx(MessageHeader, {\n      isCurrentUser: selfClass === \"\" ? false : true,\n      user: user,\n      time: time\n    }), __jsx(\"p\", null, chatMessage));\n  };\n\n  return __jsx(React.Fragment, null, type === Message.TEXT || type === Message.BOT ? renderChatMessage() : renderFileMessage());\n};\n\n_s(ChatMessage, \"OzPBocceKEGY7MiEwXFY7MRhNPs=\");\n\n_c = ChatMessage;\nexport default ChatMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"names":["useContext","UserContext","Message","MessageHeader","ChatMessage","message","userInfo","user","type","time","selfClass","username","renderFileMessage","fileUrl","fileName","IMAGE","VIDEO","FILE","renderChatMessage","chatMessage","BOT","CryptoJS","AES","decrypt","pkey","toString","enc","Utf8","TEXT"],"sources":["C:/Users/teldeeb/kitchen/Anomly/components/Chat/ChatMessage.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { UserContext } from \"./ChatHome\";\r\nimport { Message } from \"../../utils/Message\";\r\nimport \"../../styles/chatmessage.scss\";\r\nimport MessageHeader from \"./MessageHeader\";\r\n\r\nconst ChatMessage = ({ message }) => {\r\n    // current user\r\n    const userInfo = useContext(UserContext);\r\n\r\n    const { user, type, time } = message;\r\n    const selfClass = userInfo.username === user ? \"message-chat-self\" : \"\";\r\n\r\n    /**\r\n     * Render file messages using their URL\r\n     */\r\n    const renderFileMessage = () => {\r\n        const { fileUrl, fileName } = message;\r\n\r\n        switch (type) {\r\n            case Message.IMAGE:\r\n                return (\r\n                    <div\r\n                        className={`message message-chat message-media ${selfClass}`}>\r\n                        <MessageHeader\r\n                            isCurrentUser={selfClass === \"\" ? false : true}\r\n                            user={user}\r\n                            time={time}\r\n                        />\r\n                        <img\r\n                            className=\"chat-image\"\r\n                            src={fileUrl}\r\n                            alt={user + \" \" + time}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n            case Message.VIDEO:\r\n                return (\r\n                    <div\r\n                        className={`message message-chat message-media ${selfClass}`}>\r\n                        <MessageHeader\r\n                            isCurrentUser={selfClass === \"\" ? false : true}\r\n                            user={user}\r\n                            time={time}\r\n                        />\r\n                        <video className=\"chat-video\" controls>\r\n                            <source src={fileUrl} type=\"video/mp4\" />\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                    </div>\r\n                );\r\n\r\n            case Message.FILE:\r\n                return (\r\n                    <div\r\n                        className={`message message-chat message-media ${selfClass}`}>\r\n                        <MessageHeader\r\n                            isCurrentUser={selfClass === \"\" ? false : true}\r\n                            user={user}\r\n                            time={time}\r\n                        />\r\n                        <a className=\"chat-file\" href={fileUrl} target=\"_blank\">\r\n                            <i className=\"fa fa-file fa-2x mr-2\"></i>\r\n                            <span>{fileName}</span>\r\n                        </a>\r\n                    </div>\r\n                );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Render text messages\r\n     */\r\n    const renderChatMessage = () => {\r\n        const { chatMessage } = message;\r\n\r\n        // render bot messages\r\n        if (type === Message.BOT) {\r\n            return (\r\n                <div className=\"message message-bot text-center\">\r\n                    <small>{chatMessage}</small>\r\n                </div>\r\n            );\r\n        }\r\n        chatMessage = CryptoJS.AES.decrypt(chatMessage,user.pkey).toString(CryptoJS.enc.Utf8);\r\n        return (\r\n            <div className={`message message-chat ${selfClass}`}>\r\n                <MessageHeader\r\n                    isCurrentUser={selfClass === \"\" ? false : true}\r\n                    user={user}\r\n                    time={time}\r\n                />\r\n                <p>{chatMessage}</p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {type === Message.TEXT || type === Message.BOT\r\n                ? renderChatMessage()\r\n                : renderFileMessage()}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}