{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\n\nfunction _classCheckPrivateStaticFieldDescriptor(descriptor, action) { if (descriptor === undefined) { throw new TypeError(\"attempted to \" + action + \" private static field before its declaration\"); } }\n\nfunction _classCheckPrivateStaticAccess(receiver, classConstructor) { if (receiver !== classConstructor) { throw new TypeError(\"Private static access of wrong provenance\"); } }\n\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n\nimport AWS from \"aws-sdk\";\n\nvar AWS_Ops = /*#__PURE__*/function () {\n  function AWS_Ops() {\n    _classCallCheck(this, AWS_Ops);\n\n    AWS.config.update({\n      accessKeyId: _classStaticPrivateFieldSpecGet(AWS_Ops, AWS_Ops, _CONFIG).AWS_KEY,\n      secretAccessKey: _classStaticPrivateFieldSpecGet(AWS_Ops, AWS_Ops, _CONFIG).AWS_SECRET\n    });\n  }\n\n  _createClass(AWS_Ops, [{\n    key: \"getUrl\",\n    value: function getUrl(fileName) {\n      return \"https://\".concat(_classStaticPrivateFieldSpecGet(AWS_Ops, AWS_Ops, _CONFIG).bucketName, \".s3.\").concat(_classStaticPrivateFieldSpecGet(AWS_Ops, AWS_Ops, _CONFIG).region, \".amazonaws.com/\").concat(fileName);\n    }\n  }, {\n    key: \"uploadToS3\",\n    value: function uploadToS3(file) {\n      var params = {\n        ACL: \"public-read\",\n        Key: file.name,\n        ContentType: file.type,\n        Body: file,\n        Bucket: _classStaticPrivateFieldSpecGet(AWS_Ops, AWS_Ops, _CONFIG).bucketName\n      };\n      var s3 = new AWS.S3();\n      return {\n        uploadHandler: s3.upload(params),\n        url: this.getUrl(file.name)\n      };\n    }\n  }]);\n\n  return AWS_Ops;\n}();\n\nvar _CONFIG = {\n  writable: true,\n  value: {\n    AWS_KEY: process.env.NEXT_PUBLIC_AWS_ACCESS_KEY,\n    AWS_SECRET: process.env.NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY,\n    bucketName: process.env.NEXT_PUBLIC_BUCKET_NAME,\n    region: process.env.NEXT_PUBLIC_REGION\n  }\n};\nexport default AWS_Ops;","map":{"version":3,"names":["AWS","AWS_Ops","config","update","accessKeyId","AWS_KEY","secretAccessKey","AWS_SECRET","fileName","bucketName","region","file","params","ACL","Key","name","ContentType","type","Body","Bucket","s3","S3","uploadHandler","upload","url","getUrl","process","env","NEXT_PUBLIC_AWS_ACCESS_KEY","NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY","NEXT_PUBLIC_BUCKET_NAME","NEXT_PUBLIC_REGION"],"sources":["C:/Users/teldeeb/kitchen/Anomly/functions/utils/AWS_S3.js"],"sourcesContent":["import AWS from \"aws-sdk\";\r\n\r\nclass AWS_Ops {\r\n    static #CONFIG = {\r\n        AWS_KEY: process.env.NEXT_PUBLIC_AWS_ACCESS_KEY,\r\n        AWS_SECRET: process.env.NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY,\r\n        bucketName: process.env.NEXT_PUBLIC_BUCKET_NAME,\r\n        region: process.env.NEXT_PUBLIC_REGION,\r\n    };\r\n\r\n    constructor() {\r\n        AWS.config.update({\r\n            accessKeyId: AWS_Ops.#CONFIG.AWS_KEY,\r\n            secretAccessKey: AWS_Ops.#CONFIG.AWS_SECRET,\r\n        });\r\n    }\r\n\r\n    getUrl(fileName) {\r\n        return `https://${AWS_Ops.#CONFIG.bucketName}.s3.${\r\n            AWS_Ops.#CONFIG.region\r\n        }.amazonaws.com/${fileName}`;\r\n    }\r\n\r\n    uploadToS3(file) {\r\n        const params = {\r\n            ACL: \"public-read\",\r\n            Key: file.name,\r\n            ContentType: file.type,\r\n            Body: file,\r\n            Bucket: AWS_Ops.#CONFIG.bucketName,\r\n        };\r\n\r\n        const s3 = new AWS.S3();\r\n        return {\r\n            uploadHandler: s3.upload(params),\r\n            url: this.getUrl(file.name),\r\n        };\r\n    }\r\n}\r\n\r\nexport default AWS_Ops;\r\n"],"mappings":";;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,SAAhB;;IAEMC,O;EAQF,mBAAc;IAAA;;IACVD,GAAG,CAACE,MAAJ,CAAWC,MAAX,CAAkB;MACdC,WAAW,EAAE,gCAAAH,OAAO,EAV1BA,OAU0B,UAAP,CAAgBI,OADf;MAEdC,eAAe,EAAE,gCAAAL,OAAO,EAX9BA,OAW8B,UAAP,CAAgBM;IAFnB,CAAlB;EAIH;;;;WAED,gBAAOC,QAAP,EAAiB;MACb,yBAAkB,gCAAAP,OAAO,EAhB3BA,OAgB2B,UAAP,CAAgBQ,UAAlC,iBACI,gCAAAR,OAAO,EAjBbA,OAiBa,UAAP,CAAgBS,MADpB,4BAEkBF,QAFlB;IAGH;;;WAED,oBAAWG,IAAX,EAAiB;MACb,IAAMC,MAAM,GAAG;QACXC,GAAG,EAAE,aADM;QAEXC,GAAG,EAAEH,IAAI,CAACI,IAFC;QAGXC,WAAW,EAAEL,IAAI,CAACM,IAHP;QAIXC,IAAI,EAAEP,IAJK;QAKXQ,MAAM,EAAE,gCAAAlB,OAAO,EA3BrBA,OA2BqB,UAAP,CAAgBQ;MALb,CAAf;MAQA,IAAMW,EAAE,GAAG,IAAIpB,GAAG,CAACqB,EAAR,EAAX;MACA,OAAO;QACHC,aAAa,EAAEF,EAAE,CAACG,MAAH,CAAUX,MAAV,CADZ;QAEHY,GAAG,EAAE,KAAKC,MAAL,CAAYd,IAAI,CAACI,IAAjB;MAFF,CAAP;IAIH;;;;;;;;SAlCgB;IACbV,OAAO,EAAEqB,OAAO,CAACC,GAAR,CAAYC,0BADR;IAEbrB,UAAU,EAAEmB,OAAO,CAACC,GAAR,CAAYE,iCAFX;IAGbpB,UAAU,EAAEiB,OAAO,CAACC,GAAR,CAAYG,uBAHX;IAIbpB,MAAM,EAAEgB,OAAO,CAACC,GAAR,CAAYI;EAJP;;AAqCrB,eAAe9B,OAAf"},"metadata":{},"sourceType":"module"}