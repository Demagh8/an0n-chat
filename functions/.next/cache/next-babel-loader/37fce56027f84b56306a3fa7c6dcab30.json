{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport RoomForm from \"./RoomForm\";\nimport ChatSection from \"./ChatSection\";\nimport { SOCKET_EVENTS } from \"../../utils/Constants\";\nimport Message from \"../../utils/Message\";\nexport const UserContext = React.createContext(null);\n\nconst ChatHome = () => {\n  const {\n    0: socket,\n    1: setSocket\n  } = useState(null);\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: roomUsers,\n    1: setRoomUsers\n  } = useState([]);\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]); // Initializing Socket\n\n  useEffect(() => {\n    if (!socket) {\n      initSocket();\n    }\n  }, [socket]);\n  /**\r\n   * Initializing socket\r\n   * Handling socket events\r\n   */\n\n  const initSocket = () => {\n    var socket = io();\n    const {\n      CHAT_MESSAGE,\n      ROOM_USERS\n    } = SOCKET_EVENTS; // listens for incoming message from server\n    // 1. chat messages\n\n    socket.on(CHAT_MESSAGE, message => {\n      setMessages(messages => [...messages, message]);\n    }); // 2. set room users\n\n    socket.on(ROOM_USERS, info => {\n      setRoomUsers(info.users);\n    });\n    socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected\");\n    });\n    setSocket(socket);\n  };\n  /**\r\n   * On join from chat form\r\n   * @param  {username:string, room:string} user\r\n   */\n\n\n  const onJoin = user => {\n    setUser(user);\n    const {\n      username,\n      room,\n      key\n    } = user; // join room\n\n    socket.emit(SOCKET_EVENTS.JOIN_ROOM, {\n      username,\n      room\n    });\n  };\n  /**\r\n   * On user have left the room\r\n   */\n\n\n  const onLeave = () => {\n    setUser(null);\n    setMessages([]);\n    setSocket(null);\n    socket.disconnect();\n  };\n  /**\r\n   * Handles message sending by sending message to server\r\n   * @param  {Message} Instance of class message\r\n   */\n\n\n  const sendMessage = message => {\n    // emit message to server\n    console.log(message);\n    message.chatMessage = CryptoJS.AES.encrypt(message.chatMessage, user.key).toString();\n    socket.emit(SOCKET_EVENTS.CHAT_MESSAGE, message);\n  };\n\n  return __jsx(\"section\", {\n    style: {\n      height: \"100vh\"\n    }\n  }, !user ? __jsx(RoomForm, {\n    handleSubmit: onJoin\n  }) : __jsx(UserContext.Provider, {\n    value: user\n  }, __jsx(ChatSection, {\n    onSend: sendMessage,\n    roomUsers: roomUsers,\n    messages: messages,\n    onLeave: onLeave\n  })));\n};\n\nexport default ChatHome;","map":{"version":3,"names":["useState","useEffect","io","RoomForm","ChatSection","SOCKET_EVENTS","Message","UserContext","React","createContext","ChatHome","socket","setSocket","user","setUser","roomUsers","setRoomUsers","messages","setMessages","initSocket","CHAT_MESSAGE","ROOM_USERS","on","message","info","users","console","log","onJoin","username","room","key","emit","JOIN_ROOM","onLeave","disconnect","sendMessage","chatMessage","CryptoJS","AES","encrypt","toString","height"],"sources":["C:/Users/teldeeb/kitchen/Anomly/components/Chat/ChatHome.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport RoomForm from \"./RoomForm\";\r\nimport ChatSection from \"./ChatSection\";\r\nimport { SOCKET_EVENTS } from \"../../utils/Constants\";\r\nimport Message from \"../../utils/Message\";\r\n\r\nexport const UserContext = React.createContext(null);\r\n\r\nconst ChatHome = () => {\r\n    const [socket, setSocket] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n    const [roomUsers, setRoomUsers] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    // Initializing Socket\r\n    useEffect(() => {\r\n        if (!socket) {\r\n            initSocket();\r\n        }\r\n    }, [socket]);\r\n\r\n    /**\r\n     * Initializing socket\r\n     * Handling socket events\r\n     */\r\n    const initSocket = () => {\r\n        var socket = io();\r\n\r\n        const { CHAT_MESSAGE, ROOM_USERS } = SOCKET_EVENTS;\r\n\r\n        // listens for incoming message from server\r\n        // 1. chat messages\r\n        socket.on(CHAT_MESSAGE, (message) => {\r\n            setMessages((messages) => [...messages, message]);\r\n        });\r\n        // 2. set room users\r\n        socket.on(ROOM_USERS, (info) => {\r\n            setRoomUsers(info.users);\r\n        });\r\n\r\n        socket.on(\"disconnect\", () => {\r\n            console.log(\"Disconnected\");\r\n        });\r\n\r\n        setSocket(socket);\r\n    };\r\n\r\n    /**\r\n     * On join from chat form\r\n     * @param  {username:string, room:string} user\r\n     */\r\n    const onJoin = (user) => {\r\n        setUser(user);\r\n\r\n        const { username, room, key } = user;\r\n\r\n        // join room\r\n        socket.emit(SOCKET_EVENTS.JOIN_ROOM, { username, room });\r\n    };\r\n\r\n    /**\r\n     * On user have left the room\r\n     */\r\n    const onLeave = () => {\r\n        setUser(null);\r\n        setMessages([]);\r\n        setSocket(null);\r\n        socket.disconnect();\r\n    };\r\n\r\n    /**\r\n     * Handles message sending by sending message to server\r\n     * @param  {Message} Instance of class message\r\n     */\r\n    const sendMessage = (message) => {\r\n        // emit message to server\r\n        console.log(message);\r\n        message.chatMessage = CryptoJS.AES.encrypt(message.chatMessage, user.key).toString();\r\n        socket.emit(SOCKET_EVENTS.CHAT_MESSAGE, message);\r\n    };\r\n\r\n    return (\r\n        <section style={{ height: \"100vh\" }}>\r\n            {!user ? (\r\n                <RoomForm handleSubmit={onJoin} />\r\n            ) : (\r\n                <UserContext.Provider value={user}>\r\n                    <ChatSection\r\n                        onSend={sendMessage}\r\n                        roomUsers={roomUsers}\r\n                        messages={messages}\r\n                        onLeave={onLeave}\r\n                    />\r\n                </UserContext.Provider>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ChatHome;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}