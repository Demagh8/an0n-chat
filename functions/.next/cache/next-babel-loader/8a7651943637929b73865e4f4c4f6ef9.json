{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { MIN_USERNAME_LENGTH } from \"../../utils/Constants\";\nimport \"../../styles/roomForm.scss\";\n\nvar RoomForm = function RoomForm(_ref) {\n  _s();\n\n  var handleSubmit = _ref.handleSubmit;\n\n  var _useState = useState(\"\"),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      room = _useState2[0],\n      setRoom = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      key = _useState3[0],\n      setKey = _useState3[1];\n\n  var _useState4 = useState({\n    usernameErr: null,\n    roomErr: null\n  }),\n      errors = _useState4[0],\n      setErrors = _useState4[1];\n\n  var onJoin = function onJoin(event) {\n    event.preventDefault();\n    var usernameErr = errors.usernameErr,\n        roomErr = errors.roomErr;\n\n    if (username !== \"\" && room !== \"\" && usernameErr == null && roomErr == null) {\n      var user = {\n        username: username,\n        room: room\n      };\n      handleSubmit(user);\n    } else {\n      // if both the field are null\n      if (!usernameErr && !roomErr) {\n        setErrors({\n          usernameErr: \"Username can't be empty!\",\n          roomErr: \"Room name can't be empty!\"\n        });\n      }\n    }\n  };\n  /**\r\n   * Validating form fields\r\n   * @param  {String} {name\r\n   * @param  {String} value}\r\n   */\n\n\n  var validate = function validate(_ref2) {\n    var name = _ref2.name,\n        value = _ref2.value;\n    var usernameErr = errors.usernameErr,\n        roomErr = errors.roomErr;\n\n    switch (name) {\n      case \"username\":\n        if (value.length == 0) usernameErr = \"Username can't be empty!\";else if (value.length < MIN_USERNAME_LENGTH) usernameErr = \"Username is too short!\";else usernameErr = null;\n        break;\n\n      case \"room\":\n        if (value.length == 0) roomErr = \"Room name can't be empty!\";else if (value.length > 0 && value.includes(\" \")) roomErr = \"Room name can't have spaces!\";else roomErr = null;\n        break;\n    }\n\n    setErrors({\n      usernameErr: usernameErr,\n      roomErr: roomErr\n    });\n  };\n  /**\r\n   * add error class if error exist\r\n   * @param  {String} error\r\n   */\n\n\n  var addErrorClass = function addErrorClass(error) {\n    if (error) return \"error\";\n    return \"\";\n  };\n\n  return __jsx(\"div\", {\n    className: \"chat-form-container container\"\n  }, __jsx(\"div\", {\n    className: \"row justify-content-center m-0 text-center\"\n  }, __jsx(\"h2\", {\n    className: \"mt-5 mb-5\"\n  }, \"Welcome again to Anomly!\")), __jsx(\"div\", {\n    className: \"row justify-content-center align-items center m-0\"\n  }, __jsx(\"div\", {\n    className: \"chat-form col-11 col-sm-6 col-md-4 p-0\"\n  }, __jsx(\"div\", {\n    className: \"row justify-content-center align-items-center m-0\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: \"/images/chat-logo1.png\",\n    alt: \"icon\"\n  })))), __jsx(\"form\", {\n    onSubmit: onJoin\n  }, __jsx(\"div\", {\n    className: \"form-group \".concat(addErrorClass(errors.usernameErr))\n  }, __jsx(\"label\", null, \"Display name\"), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"username\",\n    value: username,\n    onChange: function onChange(event) {\n      setUsername(event.target.value);\n      validate(event.target);\n    }\n  }), errors.usernameErr ? __jsx(\"span\", null, __jsx(\"i\", {\n    className: \"fa fa-exclamation-triangle\"\n  }), __jsx(\"small\", {\n    className: \"pl-2\"\n  }, errors.usernameErr)) : null), __jsx(\"div\", {\n    className: \"form-group \".concat(addErrorClass(errors.roomErr))\n  }, __jsx(\"label\", null, \"Room name\"), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"room\",\n    value: room,\n    onChange: function onChange(event) {\n      setRoom(event.target.value);\n      validate(event.target);\n    }\n  }), errors.roomErr ? __jsx(\"span\", null, __jsx(\"i\", {\n    className: \"fa fa-exclamation-triangle\"\n  }), __jsx(\"small\", {\n    className: \"pl-2\"\n  }, errors.roomErr)) : null), __jsx(\"div\", {\n    className: \"form-group \".concat(addErrorClass(errors.roomErr))\n  }, __jsx(\"label\", null, \"Room Key\"), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"key\",\n    value: key,\n    onChange: function onChange(event) {\n      setRoom(event.target.value);\n      validate(event.target);\n    }\n  }), errors.roomErr ? __jsx(\"span\", null, __jsx(\"i\", {\n    className: \"fa fa-exclamation-triangle\"\n  }), __jsx(\"small\", {\n    className: \"pl-2\"\n  }, errors.roomErr)) : null), __jsx(\"input\", {\n    className: \"btn\",\n    type: \"submit\",\n    value: \"Join Chat\"\n  })))));\n};\n\n_s(RoomForm, \"i9F+s8Pu//HzTLCohPHgGKWc0mc=\");\n\n_c = RoomForm;\nexport default RoomForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomForm\");","map":{"version":3,"names":["useState","Link","MIN_USERNAME_LENGTH","RoomForm","handleSubmit","username","setUsername","room","setRoom","key","setKey","usernameErr","roomErr","errors","setErrors","onJoin","event","preventDefault","user","validate","name","value","length","includes","addErrorClass","error","target"],"sources":["C:/Users/teldeeb/kitchen/Anomly/components/Chat/RoomForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { MIN_USERNAME_LENGTH } from \"../../utils/Constants\";\r\nimport \"../../styles/roomForm.scss\";\r\n\r\nconst RoomForm = ({ handleSubmit }) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [room, setRoom] = useState(\"\");\r\n    const [key, setKey] = useState(\"\");\r\n    const [errors, setErrors] = useState({\r\n        usernameErr: null,\r\n        roomErr: null,\r\n    });\r\n\r\n    const onJoin = (event) => {\r\n        event.preventDefault();\r\n\r\n        const { usernameErr, roomErr } = errors;\r\n\r\n        if (\r\n            username !== \"\" &&\r\n            room !== \"\" &&\r\n            usernameErr == null &&\r\n            roomErr == null\r\n        ) {\r\n            const user = {\r\n                username,\r\n                room,\r\n            };\r\n            handleSubmit(user);\r\n        } else {\r\n            // if both the field are null\r\n            if (!usernameErr && !roomErr) {\r\n                setErrors({\r\n                    usernameErr: \"Username can't be empty!\",\r\n                    roomErr: \"Room name can't be empty!\",\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validating form fields\r\n     * @param  {String} {name\r\n     * @param  {String} value}\r\n     */\r\n    const validate = ({ name, value }) => {\r\n        let { usernameErr, roomErr } = errors;\r\n\r\n        switch (name) {\r\n            case \"username\":\r\n                if (value.length == 0) usernameErr = \"Username can't be empty!\";\r\n                else if (value.length < MIN_USERNAME_LENGTH)\r\n                    usernameErr = \"Username is too short!\";\r\n                else usernameErr = null;\r\n                break;\r\n            case \"room\":\r\n                if (value.length == 0) roomErr = \"Room name can't be empty!\";\r\n                else if (value.length > 0 && value.includes(\" \"))\r\n                    roomErr = \"Room name can't have spaces!\";\r\n                else roomErr = null;\r\n                break;\r\n        }\r\n        setErrors({\r\n            usernameErr,\r\n            roomErr,\r\n        });\r\n    };\r\n\r\n    /**\r\n     * add error class if error exist\r\n     * @param  {String} error\r\n     */\r\n    const addErrorClass = (error) => {\r\n        if (error) return \"error\";\r\n        return \"\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-form-container container\">\r\n            <div className=\"row justify-content-center m-0 text-center\">\r\n                <h2 className=\"mt-5 mb-5\">Welcome again to Anomly!</h2>\r\n            </div>\r\n            <div className=\"row justify-content-center align-items center m-0\">\r\n                <div className=\"chat-form col-11 col-sm-6 col-md-4 p-0\">\r\n                    <div className=\"row justify-content-center align-items-center m-0\">\r\n                        <Link href=\"/\">\r\n                            <a>\r\n                                <img src=\"/images/chat-logo1.png\" alt=\"icon\" />\r\n                            </a>\r\n                        </Link>\r\n                    </div>\r\n                    <form onSubmit={onJoin}>\r\n                        <div\r\n                            className={`form-group ${addErrorClass(\r\n                                errors.usernameErr\r\n                            )}`}>\r\n                            <label>Display name</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                value={username}\r\n                                onChange={(event) => {\r\n                                    setUsername(event.target.value);\r\n                                    validate(event.target);\r\n                                }}\r\n                            />\r\n                            {errors.usernameErr ? (\r\n                                <span>\r\n                                    <i className=\"fa fa-exclamation-triangle\"></i>\r\n                                    <small className=\"pl-2\">\r\n                                        {errors.usernameErr}\r\n                                    </small>\r\n                                </span>\r\n                            ) : null}\r\n                        </div>\r\n                        <div\r\n                            className={`form-group ${addErrorClass(\r\n                                errors.roomErr\r\n                            )}`}>\r\n                            <label>Room name</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"room\"\r\n                                value={room}\r\n                                onChange={(event) => {\r\n                                    setRoom(event.target.value);\r\n                                    validate(event.target);\r\n                                }}\r\n                            />\r\n                            {errors.roomErr ? (\r\n                                <span>\r\n                                    <i className=\"fa fa-exclamation-triangle\"></i>\r\n                                    <small className=\"pl-2\">\r\n                                        {errors.roomErr}\r\n                                    </small>\r\n                                </span>\r\n                            ) : null}\r\n                        </div>\r\n\t\t\t\t\t\t<div\r\n                            className={`form-group ${addErrorClass(\r\n                                errors.roomErr\r\n                            )}`}>\r\n                            <label>Room Key</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"key\"\r\n                                value={key}\r\n                                onChange={(event) => {\r\n                                    setRoom(event.target.value);\r\n                                    validate(event.target);\r\n                                }}\r\n                            />\r\n                            {errors.roomErr ? (\r\n                                <span>\r\n                                    <i className=\"fa fa-exclamation-triangle\"></i>\r\n                                    <small className=\"pl-2\">\r\n                                        {errors.roomErr}\r\n                                    </small>\r\n                                </span>\r\n                            ) : null}\r\n                        </div>\r\n\t\t\t\t\t\t\r\n                        <input\r\n                            className=\"btn\"\r\n                            type=\"submit\"\r\n                            value=\"Join Chat\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomForm;\r\n"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAO,4BAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAsB;EAAA;;EAAA,IAAnBC,YAAmB,QAAnBA,YAAmB;;EACnC,gBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;EAAA,IAAOK,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAAwBN,QAAQ,CAAC,EAAD,CAAhC;EAAA,IAAOO,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAsBR,QAAQ,CAAC,EAAD,CAA9B;EAAA,IAAOS,GAAP;EAAA,IAAYC,MAAZ;;EACA,iBAA4BV,QAAQ,CAAC;IACjCW,WAAW,EAAE,IADoB;IAEjCC,OAAO,EAAE;EAFwB,CAAD,CAApC;EAAA,IAAOC,MAAP;EAAA,IAAeC,SAAf;;EAKA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;IACtBA,KAAK,CAACC,cAAN;IAEA,IAAQN,WAAR,GAAiCE,MAAjC,CAAQF,WAAR;IAAA,IAAqBC,OAArB,GAAiCC,MAAjC,CAAqBD,OAArB;;IAEA,IACIP,QAAQ,KAAK,EAAb,IACAE,IAAI,KAAK,EADT,IAEAI,WAAW,IAAI,IAFf,IAGAC,OAAO,IAAI,IAJf,EAKE;MACE,IAAMM,IAAI,GAAG;QACTb,QAAQ,EAARA,QADS;QAETE,IAAI,EAAJA;MAFS,CAAb;MAIAH,YAAY,CAACc,IAAD,CAAZ;IACH,CAXD,MAWO;MACH;MACA,IAAI,CAACP,WAAD,IAAgB,CAACC,OAArB,EAA8B;QAC1BE,SAAS,CAAC;UACNH,WAAW,EAAE,0BADP;UAENC,OAAO,EAAE;QAFH,CAAD,CAAT;MAIH;IACJ;EACJ,CAzBD;EA0BA;AACJ;AACA;AACA;AACA;;;EACI,IAAMO,QAAQ,GAAG,SAAXA,QAAW,QAAqB;IAAA,IAAlBC,IAAkB,SAAlBA,IAAkB;IAAA,IAAZC,KAAY,SAAZA,KAAY;IAClC,IAAMV,WAAN,GAA+BE,MAA/B,CAAMF,WAAN;IAAA,IAAmBC,OAAnB,GAA+BC,MAA/B,CAAmBD,OAAnB;;IAEA,QAAQQ,IAAR;MACI,KAAK,UAAL;QACI,IAAIC,KAAK,CAACC,MAAN,IAAgB,CAApB,EAAuBX,WAAW,GAAG,0BAAd,CAAvB,KACK,IAAIU,KAAK,CAACC,MAAN,GAAepB,mBAAnB,EACDS,WAAW,GAAG,wBAAd,CADC,KAEAA,WAAW,GAAG,IAAd;QACL;;MACJ,KAAK,MAAL;QACI,IAAIU,KAAK,CAACC,MAAN,IAAgB,CAApB,EAAuBV,OAAO,GAAG,2BAAV,CAAvB,KACK,IAAIS,KAAK,CAACC,MAAN,GAAe,CAAf,IAAoBD,KAAK,CAACE,QAAN,CAAe,GAAf,CAAxB,EACDX,OAAO,GAAG,8BAAV,CADC,KAEAA,OAAO,GAAG,IAAV;QACL;IAZR;;IAcAE,SAAS,CAAC;MACNH,WAAW,EAAXA,WADM;MAENC,OAAO,EAAPA;IAFM,CAAD,CAAT;EAIH,CArBD;EAuBA;AACJ;AACA;AACA;;;EACI,IAAMY,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;IAC7B,IAAIA,KAAJ,EAAW,OAAO,OAAP;IACX,OAAO,EAAP;EACH,CAHD;;EAKA,OACI;IAAK,SAAS,EAAC;EAAf,GACI;IAAK,SAAS,EAAC;EAAf,GACI;IAAI,SAAS,EAAC;EAAd,8BADJ,CADJ,EAII;IAAK,SAAS,EAAC;EAAf,GACI;IAAK,SAAS,EAAC;EAAf,GACI;IAAK,SAAS,EAAC;EAAf,GACI,MAAC,IAAD;IAAM,IAAI,EAAC;EAAX,GACI,iBACI;IAAK,GAAG,EAAC,wBAAT;IAAkC,GAAG,EAAC;EAAtC,EADJ,CADJ,CADJ,CADJ,EAQI;IAAM,QAAQ,EAAEV;EAAhB,GACI;IACI,SAAS,uBAAgBS,aAAa,CAClCX,MAAM,CAACF,WAD2B,CAA7B;EADb,GAII,oCAJJ,EAKI;IACI,SAAS,EAAC,cADd;IAEI,IAAI,EAAC,MAFT;IAGI,IAAI,EAAC,UAHT;IAII,KAAK,EAAEN,QAJX;IAKI,QAAQ,EAAE,kBAACW,KAAD,EAAW;MACjBV,WAAW,CAACU,KAAK,CAACU,MAAN,CAAaL,KAAd,CAAX;MACAF,QAAQ,CAACH,KAAK,CAACU,MAAP,CAAR;IACH;EARL,EALJ,EAeKb,MAAM,CAACF,WAAP,GACG,oBACI;IAAG,SAAS,EAAC;EAAb,EADJ,EAEI;IAAO,SAAS,EAAC;EAAjB,GACKE,MAAM,CAACF,WADZ,CAFJ,CADH,GAOG,IAtBR,CADJ,EAyBI;IACI,SAAS,uBAAgBa,aAAa,CAClCX,MAAM,CAACD,OAD2B,CAA7B;EADb,GAII,iCAJJ,EAKI;IACI,SAAS,EAAC,cADd;IAEI,IAAI,EAAC,MAFT;IAGI,IAAI,EAAC,MAHT;IAII,KAAK,EAAEL,IAJX;IAKI,QAAQ,EAAE,kBAACS,KAAD,EAAW;MACjBR,OAAO,CAACQ,KAAK,CAACU,MAAN,CAAaL,KAAd,CAAP;MACAF,QAAQ,CAACH,KAAK,CAACU,MAAP,CAAR;IACH;EARL,EALJ,EAeKb,MAAM,CAACD,OAAP,GACG,oBACI;IAAG,SAAS,EAAC;EAAb,EADJ,EAEI;IAAO,SAAS,EAAC;EAAjB,GACKC,MAAM,CAACD,OADZ,CAFJ,CADH,GAOG,IAtBR,CAzBJ,EAiDd;IACsB,SAAS,uBAAgBY,aAAa,CAClCX,MAAM,CAACD,OAD2B,CAA7B;EAD/B,GAIsB,gCAJtB,EAKsB;IACI,SAAS,EAAC,cADd;IAEI,IAAI,EAAC,MAFT;IAGI,IAAI,EAAC,KAHT;IAII,KAAK,EAAEH,GAJX;IAKI,QAAQ,EAAE,kBAACO,KAAD,EAAW;MACjBR,OAAO,CAACQ,KAAK,CAACU,MAAN,CAAaL,KAAd,CAAP;MACAF,QAAQ,CAACH,KAAK,CAACU,MAAP,CAAR;IACH;EARL,EALtB,EAeuBb,MAAM,CAACD,OAAP,GACG,oBACI;IAAG,SAAS,EAAC;EAAb,EADJ,EAEI;IAAO,SAAS,EAAC;EAAjB,GACKC,MAAM,CAACD,OADZ,CAFJ,CADH,GAOG,IAtB1B,CAjDc,EA0EI;IACI,SAAS,EAAC,KADd;IAEI,IAAI,EAAC,QAFT;IAGI,KAAK,EAAC;EAHV,EA1EJ,CARJ,CADJ,CAJJ,CADJ;AAkGH,CA1KD;;GAAMT,Q;;KAAAA,Q;AA4KN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}